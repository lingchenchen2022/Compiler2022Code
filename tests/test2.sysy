; ModuleID = 'moudle'
source_filename = "moudle"

@sort_arr = global [5 x i32] zeroinitializer

define i32 @combine(i32* %0, i32 %1, i32* %2, i32 %3) {
combineEntry:
  %arr1FuncPtr = alloca i32*, align 8
  store i32* %0, i32** %arr1FuncPtr, align 8
  %arr1_lengthPointer = alloca i32, align 4
  store i32 %1, i32* %arr1_lengthPointer, align 4
  %arr2FuncPtr = alloca i32*, align 8
  store i32* %2, i32** %arr2FuncPtr, align 8
  %arr2_lengthPointer = alloca i32, align 4
  store i32 %3, i32* %arr2_lengthPointer, align 4
  %i_pointer = alloca i32, align 4
  store i32 0, i32* %i_pointer, align 4
  %j_pointer = alloca i32, align 4
  store i32 0, i32* %j_pointer, align 4
  %k_pointer = alloca i32, align 4
  store i32 0, i32* %k_pointer, align 4
  br label %whileCondition

whileCondition:                                   ; preds = %entry7, %combineEntry
  %i = load i32, i32* %i_pointer, align 4
  %arr1_length = load i32, i32* %arr1_lengthPointer, align 4
  %"condition = n1 < n2" = icmp slt i32 %i, %arr1_length
  %temp = zext i1 %"condition = n1 < n2" to i32
  %j = load i32, i32* %j_pointer, align 4
  %arr2_length = load i32, i32* %arr2_lengthPointer, align 4
  %"condition = n1 < n21" = icmp slt i32 %j, %arr2_length
  %temp2 = zext i1 %"condition = n1 < n21" to i32
  %and = and i32 %temp, %temp2
  %"condition != zero" = icmp ne i32 0, %and
  br i1 %"condition != zero", label %whileBody, label %entry

whileBody:                                        ; preds = %whileCondition
  %arr1ArrayPtr = load i32*, i32** %arr1FuncPtr, align 8
  %i3 = load i32, i32* %i_pointer, align 4
  %arr1ArrPtrGEP = getelementptr i32, i32* %arr1ArrayPtr, i32 %i3
  %arr1 = load i32, i32* %arr1ArrPtrGEP, align 4
  %arr2ArrayPtr = load i32*, i32** %arr2FuncPtr, align 8
  %j4 = load i32, i32* %j_pointer, align 4
  %arr2ArrPtrGEP = getelementptr i32, i32* %arr2ArrayPtr, i32 %j4
  %arr2 = load i32, i32* %arr2ArrPtrGEP, align 4
  %"condition = n1 < n25" = icmp slt i32 %arr1, %arr2
  %temp6 = zext i1 %"condition = n1 < n25" to i32
  %condition = icmp ne i32 0, %temp6
  br i1 %condition, label %true, label %false

entry:                                            ; preds = %whileCondition
  %i23 = load i32, i32* %i_pointer, align 4
  %arr1_length24 = load i32, i32* %arr1_lengthPointer, align 4
  %"condition = n1 == n2" = icmp eq i32 %i23, %arr1_length24
  %temp25 = zext i1 %"condition = n1 == n2" to i32
  %condition26 = icmp ne i32 0, %temp25
  br i1 %condition26, label %true27, label %false28

true:                                             ; preds = %whileBody
  %arr1ArrayPtr8 = load i32*, i32** %arr1FuncPtr, align 8
  %i9 = load i32, i32* %i_pointer, align 4
  %arr1ArrPtrGEP10 = getelementptr i32, i32* %arr1ArrayPtr8, i32 %i9
  %arr111 = load i32, i32* %arr1ArrPtrGEP10, align 4
  %k = load i32, i32* %k_pointer, align 4
  %sort_arrGEP = getelementptr [5 x i32], [5 x i32]* @sort_arr, i32 0, i32 %k
  store i32 %arr111, i32* %sort_arrGEP, align 4
  %i12 = load i32, i32* %i_pointer, align 4
  %add = add i32 %i12, 1
  store i32 %add, i32* %i_pointer, align 4
  br label %entry7

false:                                            ; preds = %whileBody
  %arr2ArrayPtr13 = load i32*, i32** %arr2FuncPtr, align 8
  %j14 = load i32, i32* %j_pointer, align 4
  %arr2ArrPtrGEP15 = getelementptr i32, i32* %arr2ArrayPtr13, i32 %j14
  %arr216 = load i32, i32* %arr2ArrPtrGEP15, align 4
  %k17 = load i32, i32* %k_pointer, align 4
  %sort_arrGEP18 = getelementptr [5 x i32], [5 x i32]* @sort_arr, i32 0, i32 %k17
  store i32 %arr216, i32* %sort_arrGEP18, align 4
  %j19 = load i32, i32* %j_pointer, align 4
  %add20 = add i32 %j19, 1
  store i32 %add20, i32* %j_pointer, align 4
  br label %entry7

entry7:                                           ; preds = %false, %true
  %k21 = load i32, i32* %k_pointer, align 4
  %add22 = add i32 %k21, 1
  store i32 %add22, i32* %k_pointer, align 4
  br label %whileCondition

true27:                                           ; preds = %entry
  br label %whileCondition30

false28:                                          ; preds = %entry
  br label %whileCondition48

entry29:                                          ; preds = %entry50, %entry32
  %arr1_length66 = load i32, i32* %arr1_lengthPointer, align 4
  %arr2_length67 = load i32, i32* %arr2_lengthPointer, align 4
  %add68 = add i32 %arr1_length66, %arr2_length67
  %minus = sub i32 %add68, 1
  %sort_arrGEP69 = getelementptr [5 x i32], [5 x i32]* @sort_arr, i32 0, i32 %minus
  %sort_arr = load i32, i32* %sort_arrGEP69, align 4
  ret i32 %sort_arr

whileCondition30:                                 ; preds = %whileBody31, %true27
  %j33 = load i32, i32* %j_pointer, align 4
  %arr2_length34 = load i32, i32* %arr2_lengthPointer, align 4
  %"condition = n1 < n235" = icmp slt i32 %j33, %arr2_length34
  %temp36 = zext i1 %"condition = n1 < n235" to i32
  %"condition != zero37" = icmp ne i32 0, %temp36
  br i1 %"condition != zero37", label %whileBody31, label %entry32

whileBody31:                                      ; preds = %whileCondition30
  %arr2ArrayPtr38 = load i32*, i32** %arr2FuncPtr, align 8
  %j39 = load i32, i32* %j_pointer, align 4
  %arr2ArrPtrGEP40 = getelementptr i32, i32* %arr2ArrayPtr38, i32 %j39
  %arr241 = load i32, i32* %arr2ArrPtrGEP40, align 4
  %k42 = load i32, i32* %k_pointer, align 4
  %sort_arrGEP43 = getelementptr [5 x i32], [5 x i32]* @sort_arr, i32 0, i32 %k42
  store i32 %arr241, i32* %sort_arrGEP43, align 4
  %k44 = load i32, i32* %k_pointer, align 4
  %add45 = add i32 %k44, 1
  store i32 %add45, i32* %k_pointer, align 4
  %j46 = load i32, i32* %j_pointer, align 4
  %add47 = add i32 %j46, 1
  store i32 %add47, i32* %j_pointer, align 4
  br label %whileCondition30

entry32:                                          ; preds = %whileCondition30
  br label %entry29

whileCondition48:                                 ; preds = %whileBody49, %false28
  %i51 = load i32, i32* %i_pointer, align 4
  %arr1_length52 = load i32, i32* %arr1_lengthPointer, align 4
  %"condition = n1 < n253" = icmp slt i32 %i51, %arr1_length52
  %temp54 = zext i1 %"condition = n1 < n253" to i32
  %"condition != zero55" = icmp ne i32 0, %temp54
  br i1 %"condition != zero55", label %whileBody49, label %entry50

whileBody49:                                      ; preds = %whileCondition48
  %arr2ArrayPtr56 = load i32*, i32** %arr2FuncPtr, align 8
  %i57 = load i32, i32* %i_pointer, align 4
  %arr2ArrPtrGEP58 = getelementptr i32, i32* %arr2ArrayPtr56, i32 %i57
  %arr259 = load i32, i32* %arr2ArrPtrGEP58, align 4
  %k60 = load i32, i32* %k_pointer, align 4
  %sort_arrGEP61 = getelementptr [5 x i32], [5 x i32]* @sort_arr, i32 0, i32 %k60
  store i32 %arr259, i32* %sort_arrGEP61, align 4
  %k62 = load i32, i32* %k_pointer, align 4
  %add63 = add i32 %k62, 1
  store i32 %add63, i32* %k_pointer, align 4
  %i64 = load i32, i32* %i_pointer, align 4
  %add65 = add i32 %i64, 1
  store i32 %add65, i32* %i_pointer, align 4
  br label %whileCondition48

entry50:                                          ; preds = %whileCondition48
  br label %entry29
}

define i32 @main() {
mainEntry:
  %aVectorPointer = alloca [2 x i32], align 4
  %aGEP0 = getelementptr [2 x i32], [2 x i32]* %aVectorPointer, i32 0, i32 0
  store i32 1, i32* %aGEP0, align 4
  %aGEP1 = getelementptr [2 x i32], [2 x i32]* %aVectorPointer, i32 0, i32 1
  store i32 5, i32* %aGEP1, align 4
  %bVectorPointer = alloca [3 x i32], align 4
  %bGEP0 = getelementptr [3 x i32], [3 x i32]* %bVectorPointer, i32 0, i32 0
  store i32 1, i32* %bGEP0, align 4
  %bGEP1 = getelementptr [3 x i32], [3 x i32]* %bVectorPointer, i32 0, i32 1
  store i32 4, i32* %bGEP1, align 4
  %bGEP2 = getelementptr [3 x i32], [3 x i32]* %bVectorPointer, i32 0, i32 2
  store i32 14, i32* %bGEP2, align 4
  %aGEPPtr = getelementptr [2 x i32], [2 x i32]* %aVectorPointer, i32 0, i32 0
  %bGEPPtr = getelementptr [3 x i32], [3 x i32]* %bVectorPointer, i32 0, i32 0
  %combine = call i32 @combine(i32* %aGEPPtr, i32 2, i32* %bGEPPtr, i32 3)
  ret i32 %combine
}
